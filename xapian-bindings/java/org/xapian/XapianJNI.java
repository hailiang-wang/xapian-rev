/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.13
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xapian;

public class XapianJNI {

  static {
    System.loadLibrary("xapian_jni");
  }

  public final static native String Version_string();
  public final static native int Version_major();
  public final static native int Version_minor();
  public final static native int Version_revision();
  public final static native int BAD_VALUENO_get();
  public final static native int DB_CREATE_get();
  public final static native int DB_CREATE_OR_OPEN_get();
  public final static native int DB_CREATE_OR_OVERWRITE_get();
  public final static native int DB_OPEN_get();
  public final static native int DB_NO_SYNC_get();
  public final static native int DB_FULL_SYNC_get();
  public final static native int DB_DANGEROUS_get();
  public final static native int DB_NO_TERMLIST_get();
  public final static native int DB_BACKEND_CHERT_get();
  public final static native int DB_BACKEND_GLASS_get();
  public final static native int DB_BACKEND_INMEMORY_get();
  public final static native int DB_BACKEND_STUB_get();
  public final static native int DB_RETRY_LOCK_get();
  public final static native int DBCHECK_SHORT_TREE_get();
  public final static native int DBCHECK_FULL_TREE_get();
  public final static native int DBCHECK_SHOW_FREELIST_get();
  public final static native int DBCHECK_SHOW_STATS_get();
  public final static native int DBCHECK_FIX_get();
  public final static native int DBCOMPACT_MULTIPASS_get();
  public final static native int DBCOMPACT_NO_RENUMBER_get();
  public final static native int DBCOMPACT_SINGLE_FILE_get();
  public final static native int DOC_ASSUME_VALID_get();
  public final static native long new_PositionIterator();
  public final static native void delete_PositionIterator(long jarg1);
  public final static native void PositionIterator_skipTo(long jarg1, PositionIterator jarg1_, long jarg2);
  public final static native String PositionIterator_toString(long jarg1, PositionIterator jarg1_);
  public final static native boolean PositionIterator_equals(long jarg1, PositionIterator jarg1_, long jarg2, PositionIterator jarg2_);
  public final static native long PositionIterator_getTermPos(long jarg1, PositionIterator jarg1_);
  public final static native long PositionIterator_next(long jarg1, PositionIterator jarg1_);
  public final static native long new_PostingIterator();
  public final static native void delete_PostingIterator(long jarg1);
  public final static native long PostingIterator_getWdf(long jarg1, PostingIterator jarg1_);
  public final static native long PostingIterator_getDocLength(long jarg1, PostingIterator jarg1_);
  public final static native long PostingIterator_getUniqueTerms(long jarg1, PostingIterator jarg1_);
  public final static native long PostingIterator_positionListBegin(long jarg1, PostingIterator jarg1_);
  public final static native long PostingIterator_positionListEnd(long jarg1, PostingIterator jarg1_);
  public final static native void PostingIterator_skipTo(long jarg1, PostingIterator jarg1_, long jarg2);
  public final static native String PostingIterator_toString(long jarg1, PostingIterator jarg1_);
  public final static native long PostingIterator_next(long jarg1, PostingIterator jarg1_);
  public final static native boolean PostingIterator_hasNext(long jarg1, PostingIterator jarg1_);
  public final static native boolean PostingIterator_equals(long jarg1, PostingIterator jarg1_, long jarg2, PostingIterator jarg2_);
  public final static native long PostingIterator_getDocId(long jarg1, PostingIterator jarg1_);
  public final static native long new_TermIterator();
  public final static native void delete_TermIterator(long jarg1);
  public final static native long TermIterator_getWdf(long jarg1, TermIterator jarg1_);
  public final static native long TermIterator_getTermFreq(long jarg1, TermIterator jarg1_);
  public final static native long TermIterator_positionlistCount(long jarg1, TermIterator jarg1_);
  public final static native long TermIterator_positionListBegin(long jarg1, TermIterator jarg1_);
  public final static native long TermIterator_positionListEnd(long jarg1, TermIterator jarg1_);
  public final static native void TermIterator_skipTo(long jarg1, TermIterator jarg1_, String jarg2);
  public final static native String TermIterator_toString(long jarg1, TermIterator jarg1_);
  public final static native String TermIterator_next(long jarg1, TermIterator jarg1_);
  public final static native boolean TermIterator_hasNext(long jarg1, TermIterator jarg1_);
  public final static native boolean TermIterator_equals(long jarg1, TermIterator jarg1_, long jarg2, TermIterator jarg2_);
  public final static native String TermIterator_getTerm(long jarg1, TermIterator jarg1_);
  public final static native long new_ValueIterator();
  public final static native void delete_ValueIterator(long jarg1);
  public final static native long ValueIterator_getDocId(long jarg1, ValueIterator jarg1_);
  public final static native int ValueIterator_getValueNo(long jarg1, ValueIterator jarg1_);
  public final static native void ValueIterator_skipTo(long jarg1, ValueIterator jarg1_, long jarg2);
  public final static native boolean ValueIterator_check(long jarg1, ValueIterator jarg1_, long jarg2);
  public final static native String ValueIterator_toString(long jarg1, ValueIterator jarg1_);
  public final static native String ValueIterator_next(long jarg1, ValueIterator jarg1_);
  public final static native boolean ValueIterator_hasNext(long jarg1, ValueIterator jarg1_);
  public final static native boolean ValueIterator_equals(long jarg1, ValueIterator jarg1_, long jarg2, ValueIterator jarg2_);
  public final static native byte[] ValueIterator_getValue(long jarg1, ValueIterator jarg1_);
  public final static native long new_Document();
  public final static native void delete_Document(long jarg1);
  public final static native byte[] Document_getValue(long jarg1, Document jarg1_, int jarg2);
  public final static native void Document_addValue(long jarg1, Document jarg1_, int jarg2, byte[] jarg3);
  public final static native void Document_removeValue(long jarg1, Document jarg1_, int jarg2);
  public final static native void Document_clearValues(long jarg1, Document jarg1_);
  public final static native String Document_getData(long jarg1, Document jarg1_);
  public final static native void Document_setData(long jarg1, Document jarg1_, String jarg2);
  public final static native void Document_addPosting__SWIG_0(long jarg1, Document jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void Document_addPosting__SWIG_1(long jarg1, Document jarg1_, String jarg2, long jarg3);
  public final static native void Document_addTerm__SWIG_0(long jarg1, Document jarg1_, String jarg2, long jarg3);
  public final static native void Document_addTerm__SWIG_1(long jarg1, Document jarg1_, String jarg2);
  public final static native void Document_addBooleanTerm(long jarg1, Document jarg1_, String jarg2);
  public final static native void Document_removePosting__SWIG_0(long jarg1, Document jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void Document_removePosting__SWIG_1(long jarg1, Document jarg1_, String jarg2, long jarg3);
  public final static native long Document_removePostings__SWIG_0(long jarg1, Document jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long Document_removePostings__SWIG_1(long jarg1, Document jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void Document_removeTerm(long jarg1, Document jarg1_, String jarg2);
  public final static native void Document_clearTerms(long jarg1, Document jarg1_);
  public final static native long Document_termListCount(long jarg1, Document jarg1_);
  public final static native long Document_termListBegin(long jarg1, Document jarg1_);
  public final static native long Document_termListEnd(long jarg1, Document jarg1_);
  public final static native long Document_valuesCount(long jarg1, Document jarg1_);
  public final static native long Document_valuesBegin(long jarg1, Document jarg1_);
  public final static native long Document_valuesEnd(long jarg1, Document jarg1_);
  public final static native long Document_getDocId(long jarg1, Document jarg1_);
  public final static native byte[] Document_serialise(long jarg1, Document jarg1_);
  public final static native long Document_unserialise(byte[] jarg1);
  public final static native String Document_toString(long jarg1, Document jarg1_);
  public final static native long new_Registry();
  public final static native void delete_Registry(long jarg1);
  public final static native void Registry_registerWeightingScheme(long jarg1, Registry jarg1_, long jarg2, Weight jarg2_);
  public final static native long Registry_getWeightingScheme(long jarg1, Registry jarg1_, String jarg2);
  public final static native void Registry_registerPostingSource(long jarg1, Registry jarg1_, long jarg2, PostingSource jarg2_);
  public final static native long Registry_getPostingSource(long jarg1, Registry jarg1_, String jarg2);
  public final static native void Registry_registerMatchSpy(long jarg1, Registry jarg1_, long jarg2, MatchSpy jarg2_);
  public final static native long Registry_getMatchSpy(long jarg1, Registry jarg1_, String jarg2);
  public final static native void Registry_registerLatLongMetric(long jarg1, Registry jarg1_, long jarg2, LatLongMetric jarg2_);
  public final static native long Registry_getLatLongMetric(long jarg1, Registry jarg1_, String jarg2);
  public final static native int Query_OP_AND_get();
  public final static native int Query_OP_OR_get();
  public final static native int Query_OP_AND_NOT_get();
  public final static native int Query_OP_XOR_get();
  public final static native int Query_OP_AND_MAYBE_get();
  public final static native int Query_OP_FILTER_get();
  public final static native int Query_OP_NEAR_get();
  public final static native int Query_OP_PHRASE_get();
  public final static native int Query_OP_VALUE_RANGE_get();
  public final static native int Query_OP_SCALE_WEIGHT_get();
  public final static native int Query_OP_ELITE_SET_get();
  public final static native int Query_OP_VALUE_GE_get();
  public final static native int Query_OP_VALUE_LE_get();
  public final static native int Query_OP_SYNONYM_get();
  public final static native int Query_OP_MAX_get();
  public final static native int Query_OP_WILDCARD_get();
  public final static native int Query_OP_INVALID_get();
  public final static native int Query_WILDCARD_LIMIT_ERROR_get();
  public final static native int Query_WILDCARD_LIMIT_FIRST_get();
  public final static native int Query_WILDCARD_LIMIT_MOST_FREQUENT_get();
  public final static native long new_Query__SWIG_0();
  public final static native void delete_Query(long jarg1);
  public final static native long new_Query__SWIG_1(String jarg1, long jarg2, long jarg3);
  public final static native long new_Query__SWIG_2(String jarg1, long jarg2);
  public final static native long new_Query__SWIG_3(String jarg1);
  public final static native long new_Query__SWIG_4(long jarg1, PostingSource jarg1_);
  public final static native long new_Query__SWIG_5(double jarg1, long jarg2, Query jarg2_);
  public final static native long new_Query__SWIG_6(int jarg1, long jarg2, Query jarg2_, double jarg3);
  public final static native long new_Query__SWIG_7(int jarg1, long jarg2, Query jarg2_, long jarg3, Query jarg3_);
  public final static native long new_Query__SWIG_8(int jarg1, String jarg2, String jarg3);
  public final static native long new_Query__SWIG_9(int jarg1, int jarg2, byte[] jarg3);
  public final static native long new_Query__SWIG_10(int jarg1, int jarg2, byte[] jarg3, byte[] jarg4);
  public final static native long new_Query__SWIG_11(int jarg1, String jarg2, long jarg3, int jarg4, int jarg5);
  public final static native long new_Query__SWIG_12(int jarg1, String jarg2, long jarg3, int jarg4);
  public final static native long new_Query__SWIG_13(int jarg1, String jarg2, long jarg3);
  public final static native long new_Query__SWIG_14(int jarg1, String jarg2);
  public final static native long new_Query__SWIG_17(int jarg1, long[] jarg2, long jarg4);
  public final static native long new_Query__SWIG_18(int jarg1, long[] jarg2);
  public final static native long new_Query__SWIG_19(int jarg1, String[] jarg2, long jarg4);
  public final static native long new_Query__SWIG_20(int jarg1, String[] jarg2);
  public final static native long Query_getTermsBegin(long jarg1, Query jarg1_);
  public final static native long Query_getTermsEnd(long jarg1, Query jarg1_);
  public final static native long Query_getUniqueTermsBegin(long jarg1, Query jarg1_);
  public final static native long Query_getLength(long jarg1, Query jarg1_);
  public final static native boolean Query_empty(long jarg1, Query jarg1_);
  public final static native byte[] Query_serialise(long jarg1, Query jarg1_);
  public final static native long Query_unserialise__SWIG_0(byte[] jarg1, long jarg2, Registry jarg2_);
  public final static native long Query_unserialise__SWIG_1(byte[] jarg1);
  public final static native int Query_getType(long jarg1, Query jarg1_);
  public final static native long Query_getNumSubqueries(long jarg1, Query jarg1_);
  public final static native long Query_getSubquery(long jarg1, Query jarg1_, long jarg2);
  public final static native String Query_toString(long jarg1, Query jarg1_);
  public final static native long new_Query__SWIG_21(int jarg1);
  public final static native long new_StemImplementation();
  public final static native void delete_StemImplementation(long jarg1);
  public final static native String StemImplementation_apply(long jarg1, StemImplementation jarg1_, String jarg2);
  public final static native String StemImplementation_toString(long jarg1, StemImplementation jarg1_);
  public final static native void StemImplementation_director_connect(StemImplementation obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void StemImplementation_change_ownership(StemImplementation obj, long cptr, boolean take_or_release);
  public final static native long new_Stem__SWIG_0(String jarg1);
  public final static native long new_Stem__SWIG_1(long jarg1, StemImplementation jarg1_);
  public final static native void delete_Stem(long jarg1);
  public final static native String Stem_apply(long jarg1, Stem jarg1_, String jarg2);
  public final static native String Stem_toString(long jarg1, Stem jarg1_);
  public final static native String Stem_getAvailableLanguages();
  public final static native long new_TermGenerator();
  public final static native void delete_TermGenerator(long jarg1);
  public final static native void TermGenerator_setStemmer(long jarg1, TermGenerator jarg1_, long jarg2, Stem jarg2_);
  public final static native void TermGenerator_setStopper__SWIG_0(long jarg1, TermGenerator jarg1_, long jarg2, Stopper jarg2_);
  public final static native void TermGenerator_setStopper__SWIG_1(long jarg1, TermGenerator jarg1_);
  public final static native void TermGenerator_setDocument(long jarg1, TermGenerator jarg1_, long jarg2, Document jarg2_);
  public final static native long TermGenerator_getDocument(long jarg1, TermGenerator jarg1_);
  public final static native void TermGenerator_setDatabase(long jarg1, TermGenerator jarg1_, long jarg2, WritableDatabase jarg2_);
  public final static native int TermGenerator_FLAG_SPELLING_get();
  public final static native int TermGenerator_FLAG_CJK_NGRAM_get();
  public final static native int TermGenerator_setFlags__SWIG_0(long jarg1, TermGenerator jarg1_, int jarg2, int jarg3);
  public final static native int TermGenerator_setFlags__SWIG_1(long jarg1, TermGenerator jarg1_, int jarg2);
  public final static native void TermGenerator_setStemmingStrategy(long jarg1, TermGenerator jarg1_, int jarg2);
  public final static native void TermGenerator_setStopperStrategy(long jarg1, TermGenerator jarg1_, int jarg2);
  public final static native void TermGenerator_setMaxWordLength(long jarg1, TermGenerator jarg1_, long jarg2);
  public final static native void TermGenerator_indexText__SWIG_0(long jarg1, TermGenerator jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native void TermGenerator_indexText__SWIG_1(long jarg1, TermGenerator jarg1_, String jarg2, long jarg3);
  public final static native void TermGenerator_indexText__SWIG_2(long jarg1, TermGenerator jarg1_, String jarg2);
  public final static native void TermGenerator_indexTextWithoutPositions__SWIG_0(long jarg1, TermGenerator jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native void TermGenerator_indexTextWithoutPositions__SWIG_1(long jarg1, TermGenerator jarg1_, String jarg2, long jarg3);
  public final static native void TermGenerator_indexTextWithoutPositions__SWIG_2(long jarg1, TermGenerator jarg1_, String jarg2);
  public final static native void TermGenerator_increaseTermpos__SWIG_0(long jarg1, TermGenerator jarg1_, long jarg2);
  public final static native void TermGenerator_increaseTermpos__SWIG_1(long jarg1, TermGenerator jarg1_);
  public final static native long TermGenerator_getTermPos(long jarg1, TermGenerator jarg1_);
  public final static native void TermGenerator_setTermpos(long jarg1, TermGenerator jarg1_, long jarg2);
  public final static native String TermGenerator_toString(long jarg1, TermGenerator jarg1_);
  public final static native long new_MSet();
  public final static native void delete_MSet(long jarg1);
  public final static native int MSet_convertToPercent__SWIG_0(long jarg1, MSet jarg1_, double jarg2);
  public final static native int MSet_convertToPercent__SWIG_1(long jarg1, MSet jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native long MSet_getTermFreq(long jarg1, MSet jarg1_, String jarg2);
  public final static native double MSet_getTermWeight(long jarg1, MSet jarg1_, String jarg2);
  public final static native long MSet_getFirstItem(long jarg1, MSet jarg1_);
  public final static native long MSet_getMatchesLowerBound(long jarg1, MSet jarg1_);
  public final static native long MSet_getMatchesEstimated(long jarg1, MSet jarg1_);
  public final static native long MSet_getMatchesUpperBound(long jarg1, MSet jarg1_);
  public final static native long MSet_getUncollapsedMatchesLowerBound(long jarg1, MSet jarg1_);
  public final static native long MSet_getUncollapsedMatchesEstimated(long jarg1, MSet jarg1_);
  public final static native long MSet_getUncollapsedMatchesUpperBound(long jarg1, MSet jarg1_);
  public final static native double MSet_getMaxAttained(long jarg1, MSet jarg1_);
  public final static native double MSet_getMaxPossible(long jarg1, MSet jarg1_);
  public final static native int MSet_SNIPPET_BACKGROUND_MODEL_get();
  public final static native int MSet_SNIPPET_EXHAUSTIVE_get();
  public final static native int MSet_SNIPPET_EMPTY_WITHOUT_MATCH_get();
  public final static native String MSet_snippet__SWIG_0(long jarg1, MSet jarg1_, String jarg2, long jarg3, long jarg4, Stem jarg4_, long jarg5, String jarg6, String jarg7, String jarg8);
  public final static native String MSet_snippet__SWIG_1(long jarg1, MSet jarg1_, String jarg2, long jarg3, long jarg4, Stem jarg4_, long jarg5, String jarg6, String jarg7);
  public final static native String MSet_snippet__SWIG_2(long jarg1, MSet jarg1_, String jarg2, long jarg3, long jarg4, Stem jarg4_, long jarg5, String jarg6);
  public final static native String MSet_snippet__SWIG_3(long jarg1, MSet jarg1_, String jarg2, long jarg3, long jarg4, Stem jarg4_, long jarg5);
  public final static native String MSet_snippet__SWIG_4(long jarg1, MSet jarg1_, String jarg2, long jarg3, long jarg4, Stem jarg4_);
  public final static native String MSet_snippet__SWIG_5(long jarg1, MSet jarg1_, String jarg2, long jarg3);
  public final static native String MSet_snippet__SWIG_6(long jarg1, MSet jarg1_, String jarg2);
  public final static native void MSet_fetch__SWIG_0(long jarg1, MSet jarg1_, long jarg2, MSetIterator jarg2_, long jarg3, MSetIterator jarg3_);
  public final static native void MSet_fetch__SWIG_1(long jarg1, MSet jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native void MSet_fetch__SWIG_2(long jarg1, MSet jarg1_);
  public final static native long MSet_size(long jarg1, MSet jarg1_);
  public final static native boolean MSet_empty(long jarg1, MSet jarg1_);
  public final static native long MSet_begin(long jarg1, MSet jarg1_);
  public final static native long MSet_end(long jarg1, MSet jarg1_);
  public final static native long MSet_getElement(long jarg1, MSet jarg1_, long jarg2);
  public final static native long MSet_back(long jarg1, MSet jarg1_);
  public final static native String MSet_toString(long jarg1, MSet jarg1_);
  public final static native long MSet_getDocId(long jarg1, MSet jarg1_, long jarg2);
  public final static native long MSet_getDocument(long jarg1, MSet jarg1_, long jarg2);
  public final static native long MSet_getHit(long jarg1, MSet jarg1_, long jarg2);
  public final static native int MSet_getDocumentPercentage(long jarg1, MSet jarg1_, long jarg2);
  public final static native void MSetIterator_mset_set(long jarg1, MSetIterator jarg1_, long jarg2, MSet jarg2_);
  public final static native long MSetIterator_mset_get(long jarg1, MSetIterator jarg1_);
  public final static native void MSetIterator_off_from_end_set(long jarg1, MSetIterator jarg1_, long jarg2);
  public final static native long MSetIterator_off_from_end_get(long jarg1, MSetIterator jarg1_);
  public final static native long new_MSetIterator();
  public final static native long MSetIterator_getRank(long jarg1, MSetIterator jarg1_);
  public final static native long MSetIterator_getDocument(long jarg1, MSetIterator jarg1_);
  public final static native double MSetIterator_getWeight(long jarg1, MSetIterator jarg1_);
  public final static native String MSetIterator_getCollapseKey(long jarg1, MSetIterator jarg1_);
  public final static native long MSetIterator_getCollapseCount(long jarg1, MSetIterator jarg1_);
  public final static native String MSetIterator_getSortKey(long jarg1, MSetIterator jarg1_);
  public final static native int MSetIterator_getPercent(long jarg1, MSetIterator jarg1_);
  public final static native String MSetIterator_toString(long jarg1, MSetIterator jarg1_);
  public final static native long MSetIterator_next(long jarg1, MSetIterator jarg1_);
  public final static native boolean MSetIterator_hasNext(long jarg1, MSetIterator jarg1_);
  public final static native boolean MSetIterator_equals(long jarg1, MSetIterator jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native long MSetIterator_getDocId(long jarg1, MSetIterator jarg1_);
  public final static native long MSetIterator_prev(long jarg1, MSetIterator jarg1_);
  public final static native void delete_MSetIterator(long jarg1);
  public final static native long new_ESet();
  public final static native void delete_ESet(long jarg1);
  public final static native long ESet_size(long jarg1, ESet jarg1_);
  public final static native boolean ESet_empty(long jarg1, ESet jarg1_);
  public final static native long ESet_getEbound(long jarg1, ESet jarg1_);
  public final static native long ESet_begin(long jarg1, ESet jarg1_);
  public final static native long ESet_end(long jarg1, ESet jarg1_);
  public final static native long ESet_back(long jarg1, ESet jarg1_);
  public final static native String ESet_toString(long jarg1, ESet jarg1_);
  public final static native void ESetIterator_eset_set(long jarg1, ESetIterator jarg1_, long jarg2, ESet jarg2_);
  public final static native long ESetIterator_eset_get(long jarg1, ESetIterator jarg1_);
  public final static native void ESetIterator_off_from_end_set(long jarg1, ESetIterator jarg1_, long jarg2);
  public final static native long ESetIterator_off_from_end_get(long jarg1, ESetIterator jarg1_);
  public final static native long new_ESetIterator();
  public final static native double ESetIterator_getWeight(long jarg1, ESetIterator jarg1_);
  public final static native String ESetIterator_toString(long jarg1, ESetIterator jarg1_);
  public final static native String ESetIterator_next(long jarg1, ESetIterator jarg1_);
  public final static native boolean ESetIterator_hasNext(long jarg1, ESetIterator jarg1_);
  public final static native boolean ESetIterator_equals(long jarg1, ESetIterator jarg1_, long jarg2, ESetIterator jarg2_);
  public final static native String ESetIterator_getTerm(long jarg1, ESetIterator jarg1_);
  public final static native String ESetIterator_prev(long jarg1, ESetIterator jarg1_);
  public final static native void delete_ESetIterator(long jarg1);
  public final static native long new_RSet();
  public final static native void delete_RSet(long jarg1);
  public final static native long RSet_size(long jarg1, RSet jarg1_);
  public final static native boolean RSet_empty(long jarg1, RSet jarg1_);
  public final static native void RSet_addDocument__SWIG_0(long jarg1, RSet jarg1_, long jarg2);
  public final static native void RSet_addDocument__SWIG_1(long jarg1, RSet jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native void RSet_removeDocument__SWIG_0(long jarg1, RSet jarg1_, long jarg2);
  public final static native void RSet_removeDocument__SWIG_1(long jarg1, RSet jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native boolean RSet_contains__SWIG_0(long jarg1, RSet jarg1_, long jarg2);
  public final static native boolean RSet_contains__SWIG_1(long jarg1, RSet jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native String RSet_toString(long jarg1, RSet jarg1_);
  public final static native long new_MatchDecider();
  public final static native boolean MatchDecider_accept(long jarg1, MatchDecider jarg1_, long jarg2, Document jarg2_);
  public final static native void delete_MatchDecider(long jarg1);
  public final static native void MatchDecider_director_connect(MatchDecider obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void MatchDecider_change_ownership(MatchDecider obj, long cptr, boolean take_or_release);
  public final static native long new_Enquire(long jarg1, Database jarg1_);
  public final static native void delete_Enquire(long jarg1);
  public final static native void Enquire_setQuery__SWIG_0(long jarg1, Enquire jarg1_, long jarg2, Query jarg2_, long jarg3);
  public final static native void Enquire_setQuery__SWIG_1(long jarg1, Enquire jarg1_, long jarg2, Query jarg2_);
  public final static native long Enquire_getQuery(long jarg1, Enquire jarg1_);
  public final static native void Enquire_addMatchspy(long jarg1, Enquire jarg1_, long jarg2, MatchSpy jarg2_);
  public final static native void Enquire_clearMatchspies(long jarg1, Enquire jarg1_);
  public final static native void Enquire_setWeightingScheme(long jarg1, Enquire jarg1_, long jarg2, Weight jarg2_);
  public final static native void Enquire_setExpansionScheme__SWIG_0(long jarg1, Enquire jarg1_, String jarg2, double jarg3);
  public final static native void Enquire_setExpansionScheme__SWIG_1(long jarg1, Enquire jarg1_, String jarg2);
  public final static native void Enquire_setCollapseKey__SWIG_0(long jarg1, Enquire jarg1_, int jarg2, long jarg3);
  public final static native void Enquire_setCollapseKey__SWIG_1(long jarg1, Enquire jarg1_, int jarg2);
  public final static native int Enquire_ASCENDING_get();
  public final static native int Enquire_DESCENDING_get();
  public final static native int Enquire_DONT_CARE_get();
  public final static native void Enquire_setDocidOrder(long jarg1, Enquire jarg1_, int jarg2);
  public final static native void Enquire_setCutoff__SWIG_0(long jarg1, Enquire jarg1_, int jarg2, double jarg3);
  public final static native void Enquire_setCutoff__SWIG_1(long jarg1, Enquire jarg1_, int jarg2);
  public final static native void Enquire_setSortByRelevance(long jarg1, Enquire jarg1_);
  public final static native void Enquire_setSortByValue(long jarg1, Enquire jarg1_, int jarg2, boolean jarg3);
  public final static native void Enquire_setSortByKey(long jarg1, Enquire jarg1_, long jarg2, KeyMaker jarg2_, boolean jarg3);
  public final static native void Enquire_setSortByValueThenRelevance(long jarg1, Enquire jarg1_, int jarg2, boolean jarg3);
  public final static native void Enquire_setSortByKeyThenRelevance(long jarg1, Enquire jarg1_, long jarg2, KeyMaker jarg2_, boolean jarg3);
  public final static native void Enquire_setSortByRelevanceThenValue(long jarg1, Enquire jarg1_, int jarg2, boolean jarg3);
  public final static native void Enquire_setSortByRelevanceThenKey(long jarg1, Enquire jarg1_, long jarg2, KeyMaker jarg2_, boolean jarg3);
  public final static native void Enquire_setTimeLimit(long jarg1, Enquire jarg1_, double jarg2);
  public final static native long Enquire_getMSet__SWIG_0(long jarg1, Enquire jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, RSet jarg5_, long jarg6, MatchDecider jarg6_);
  public final static native long Enquire_getMSet__SWIG_1(long jarg1, Enquire jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, RSet jarg5_);
  public final static native long Enquire_getMSet__SWIG_2(long jarg1, Enquire jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long Enquire_getMSet__SWIG_3(long jarg1, Enquire jarg1_, long jarg2, long jarg3);
  public final static native long Enquire_getMSet__SWIG_4(long jarg1, Enquire jarg1_, long jarg2, long jarg3, long jarg4, RSet jarg4_, long jarg5, MatchDecider jarg5_);
  public final static native long Enquire_getMSet__SWIG_5(long jarg1, Enquire jarg1_, long jarg2, long jarg3, long jarg4, RSet jarg4_);
  public final static native int Enquire_INCLUDE_QUERY_TERMS_get();
  public final static native int Enquire_USE_EXACT_TERMFREQ_get();
  public final static native long Enquire_getESet__SWIG_0(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_, int jarg4, long jarg5, ExpandDecider jarg5_, double jarg6);
  public final static native long Enquire_getESet__SWIG_1(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_, int jarg4, long jarg5, ExpandDecider jarg5_);
  public final static native long Enquire_getESet__SWIG_2(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_, int jarg4);
  public final static native long Enquire_getESet__SWIG_3(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_);
  public final static native long Enquire_getESet__SWIG_4(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_, long jarg4, ExpandDecider jarg4_);
  public final static native long Enquire_getESet__SWIG_5(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_, int jarg4, double jarg5, long jarg6, ExpandDecider jarg6_, double jarg7);
  public final static native long Enquire_getESet__SWIG_6(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_, int jarg4, double jarg5, long jarg6, ExpandDecider jarg6_);
  public final static native long Enquire_getESet__SWIG_7(long jarg1, Enquire jarg1_, long jarg2, long jarg3, RSet jarg3_, int jarg4, double jarg5);
  public final static native long Enquire_getMatchingTermsBegin__SWIG_0(long jarg1, Enquire jarg1_, long jarg2);
  public final static native long Enquire_getMatchingTermsEnd__SWIG_0(long jarg1, Enquire jarg1_, long jarg2);
  public final static native long Enquire_getMatchingTermsBegin__SWIG_1(long jarg1, Enquire jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native long Enquire_getMatchingTermsEnd__SWIG_1(long jarg1, Enquire jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native String Enquire_toString(long jarg1, Enquire jarg1_);
  public final static native String[] Enquire_getMatchingTerms(long jarg1, Enquire jarg1_, long jarg2, MSetIterator jarg2_);
  public final static native long new_ExpandDecider();
  public final static native boolean ExpandDecider_accept(long jarg1, ExpandDecider jarg1_, String jarg2);
  public final static native void delete_ExpandDecider(long jarg1);
  public final static native long ExpandDecider_release(long jarg1, ExpandDecider jarg1_);
  public final static native void ExpandDecider_director_connect(ExpandDecider obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ExpandDecider_change_ownership(ExpandDecider obj, long cptr, boolean take_or_release);
  public final static native long new_ExpandDeciderAnd(long jarg1, ExpandDecider jarg1_, long jarg2, ExpandDecider jarg2_);
  public final static native boolean ExpandDeciderAnd_accept(long jarg1, ExpandDeciderAnd jarg1_, String jarg2);
  public final static native void delete_ExpandDeciderAnd(long jarg1);
  public final static native long new_ExpandDeciderFilterPrefix(String jarg1);
  public final static native boolean ExpandDeciderFilterPrefix_accept(long jarg1, ExpandDeciderFilterPrefix jarg1_, String jarg2);
  public final static native void delete_ExpandDeciderFilterPrefix(long jarg1);
  public final static native long new_KeyMaker();
  public final static native String KeyMaker_apply(long jarg1, KeyMaker jarg1_, long jarg2, Document jarg2_);
  public final static native void delete_KeyMaker(long jarg1);
  public final static native long KeyMaker_release(long jarg1, KeyMaker jarg1_);
  public final static native void KeyMaker_director_connect(KeyMaker obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void KeyMaker_change_ownership(KeyMaker obj, long cptr, boolean take_or_release);
  public final static native long new_MultiValueKeyMaker();
  public final static native String MultiValueKeyMaker_apply(long jarg1, MultiValueKeyMaker jarg1_, long jarg2, Document jarg2_);
  public final static native void MultiValueKeyMaker_addValue__SWIG_0(long jarg1, MultiValueKeyMaker jarg1_, int jarg2, boolean jarg3, String jarg4);
  public final static native void MultiValueKeyMaker_addValue__SWIG_1(long jarg1, MultiValueKeyMaker jarg1_, int jarg2, boolean jarg3);
  public final static native void MultiValueKeyMaker_addValue__SWIG_2(long jarg1, MultiValueKeyMaker jarg1_, int jarg2);
  public final static native void delete_MultiValueKeyMaker(long jarg1);
  public final static native int RP_SUFFIX_get();
  public final static native int RP_REPEATED_get();
  public final static native int RP_DATE_PREFER_MDY_get();
  public final static native long new_Stopper();
  public final static native boolean Stopper_apply(long jarg1, Stopper jarg1_, String jarg2);
  public final static native void delete_Stopper(long jarg1);
  public final static native String Stopper_toString(long jarg1, Stopper jarg1_);
  public final static native String Stopper_toStringSwigExplicitStopper(long jarg1, Stopper jarg1_);
  public final static native long Stopper_release(long jarg1, Stopper jarg1_);
  public final static native void Stopper_director_connect(Stopper obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Stopper_change_ownership(Stopper obj, long cptr, boolean take_or_release);
  public final static native long new_SimpleStopper__SWIG_0();
  public final static native void SimpleStopper_add(long jarg1, SimpleStopper jarg1_, String jarg2);
  public final static native boolean SimpleStopper_apply(long jarg1, SimpleStopper jarg1_, String jarg2);
  public final static native String SimpleStopper_toString(long jarg1, SimpleStopper jarg1_);
  public final static native long new_SimpleStopper__SWIG_2(String jarg1);
  public final static native void delete_SimpleStopper(long jarg1);
  public final static native long new_RangeProcessor__SWIG_0();
  public final static native long new_RangeProcessor__SWIG_1(int jarg1, String jarg2, long jarg3);
  public final static native long new_RangeProcessor__SWIG_2(int jarg1, String jarg2);
  public final static native long new_RangeProcessor__SWIG_3(int jarg1);
  public final static native void delete_RangeProcessor(long jarg1);
  public final static native long RangeProcessor_checkRange(long jarg1, RangeProcessor jarg1_, String jarg2, String jarg3);
  public final static native long RangeProcessor_apply(long jarg1, RangeProcessor jarg1_, String jarg2, String jarg3);
  public final static native long RangeProcessor_applySwigExplicitRangeProcessor(long jarg1, RangeProcessor jarg1_, String jarg2, String jarg3);
  public final static native long RangeProcessor_release(long jarg1, RangeProcessor jarg1_);
  public final static native void RangeProcessor_director_connect(RangeProcessor obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void RangeProcessor_change_ownership(RangeProcessor obj, long cptr, boolean take_or_release);
  public final static native long new_DateRangeProcessor__SWIG_0(int jarg1, long jarg2, int jarg3);
  public final static native long new_DateRangeProcessor__SWIG_1(int jarg1, long jarg2);
  public final static native long new_DateRangeProcessor__SWIG_2(int jarg1);
  public final static native long new_DateRangeProcessor__SWIG_3(int jarg1, String jarg2, long jarg3, int jarg4);
  public final static native long new_DateRangeProcessor__SWIG_4(int jarg1, String jarg2, long jarg3);
  public final static native long new_DateRangeProcessor__SWIG_5(int jarg1, String jarg2);
  public final static native long DateRangeProcessor_apply(long jarg1, DateRangeProcessor jarg1_, String jarg2, String jarg3);
  public final static native void delete_DateRangeProcessor(long jarg1);
  public final static native long new_NumberRangeProcessor__SWIG_0(int jarg1, String jarg2, long jarg3);
  public final static native long new_NumberRangeProcessor__SWIG_1(int jarg1, String jarg2);
  public final static native long new_NumberRangeProcessor__SWIG_2(int jarg1);
  public final static native long NumberRangeProcessor_apply(long jarg1, NumberRangeProcessor jarg1_, String jarg2, String jarg3);
  public final static native void delete_NumberRangeProcessor(long jarg1);
  public final static native long new_ValueRangeProcessor();
  public final static native void delete_ValueRangeProcessor(long jarg1);
  public final static native int ValueRangeProcessor_apply(long jarg1, ValueRangeProcessor jarg1_, long jarg2, long jarg3);
  public final static native long ValueRangeProcessor_release(long jarg1, ValueRangeProcessor jarg1_);
  public final static native void ValueRangeProcessor_director_connect(ValueRangeProcessor obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ValueRangeProcessor_change_ownership(ValueRangeProcessor obj, long cptr, boolean take_or_release);
  public final static native long new_StringValueRangeProcessor__SWIG_0(int jarg1);
  public final static native long new_StringValueRangeProcessor__SWIG_1(int jarg1, String jarg2, boolean jarg3);
  public final static native long new_StringValueRangeProcessor__SWIG_2(int jarg1, String jarg2);
  public final static native int StringValueRangeProcessor_apply(long jarg1, StringValueRangeProcessor jarg1_, long jarg2, long jarg3);
  public final static native void delete_StringValueRangeProcessor(long jarg1);
  public final static native long new_DateValueRangeProcessor__SWIG_0(int jarg1, boolean jarg2, int jarg3);
  public final static native long new_DateValueRangeProcessor__SWIG_1(int jarg1, boolean jarg2);
  public final static native long new_DateValueRangeProcessor__SWIG_2(int jarg1);
  public final static native long new_DateValueRangeProcessor__SWIG_3(int jarg1, String jarg2, boolean jarg3, boolean jarg4, int jarg5);
  public final static native long new_DateValueRangeProcessor__SWIG_4(int jarg1, String jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_DateValueRangeProcessor__SWIG_5(int jarg1, String jarg2, boolean jarg3);
  public final static native long new_DateValueRangeProcessor__SWIG_6(int jarg1, String jarg2);
  public final static native int DateValueRangeProcessor_apply(long jarg1, DateValueRangeProcessor jarg1_, long jarg2, long jarg3);
  public final static native void delete_DateValueRangeProcessor(long jarg1);
  public final static native long new_NumberValueRangeProcessor__SWIG_0(int jarg1);
  public final static native long new_NumberValueRangeProcessor__SWIG_1(int jarg1, String jarg2, boolean jarg3);
  public final static native long new_NumberValueRangeProcessor__SWIG_2(int jarg1, String jarg2);
  public final static native int NumberValueRangeProcessor_apply(long jarg1, NumberValueRangeProcessor jarg1_, long jarg2, long jarg3);
  public final static native void delete_NumberValueRangeProcessor(long jarg1);
  public final static native long new_FieldProcessor();
  public final static native void delete_FieldProcessor(long jarg1);
  public final static native long FieldProcessor_apply(long jarg1, FieldProcessor jarg1_, String jarg2);
  public final static native long FieldProcessor_release(long jarg1, FieldProcessor jarg1_);
  public final static native void FieldProcessor_director_connect(FieldProcessor obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void FieldProcessor_change_ownership(FieldProcessor obj, long cptr, boolean take_or_release);
  public final static native int QueryParser_FLAG_BOOLEAN_get();
  public final static native int QueryParser_FLAG_PHRASE_get();
  public final static native int QueryParser_FLAG_LOVEHATE_get();
  public final static native int QueryParser_FLAG_BOOLEAN_ANY_CASE_get();
  public final static native int QueryParser_FLAG_WILDCARD_get();
  public final static native int QueryParser_FLAG_PURE_NOT_get();
  public final static native int QueryParser_FLAG_PARTIAL_get();
  public final static native int QueryParser_FLAG_SPELLING_CORRECTION_get();
  public final static native int QueryParser_FLAG_SYNONYM_get();
  public final static native int QueryParser_FLAG_AUTO_SYNONYMS_get();
  public final static native int QueryParser_FLAG_AUTO_MULTIWORD_SYNONYMS_get();
  public final static native int QueryParser_FLAG_CJK_NGRAM_get();
  public final static native int QueryParser_FLAG_DEFAULT_get();
  public final static native long new_QueryParser();
  public final static native void delete_QueryParser(long jarg1);
  public final static native void QueryParser_setStemmer(long jarg1, QueryParser jarg1_, long jarg2, Stem jarg2_);
  public final static native void QueryParser_setStemmingStrategy(long jarg1, QueryParser jarg1_, int jarg2);
  public final static native void QueryParser_setStopper__SWIG_0(long jarg1, QueryParser jarg1_, long jarg2, Stopper jarg2_);
  public final static native void QueryParser_setStopper__SWIG_1(long jarg1, QueryParser jarg1_);
  public final static native void QueryParser_setDefaultOp(long jarg1, QueryParser jarg1_, int jarg2);
  public final static native int QueryParser_getDefaultOp(long jarg1, QueryParser jarg1_);
  public final static native void QueryParser_setDatabase(long jarg1, QueryParser jarg1_, long jarg2, Database jarg2_);
  public final static native void QueryParser_setMaxExpansion__SWIG_0(long jarg1, QueryParser jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native void QueryParser_setMaxExpansion__SWIG_1(long jarg1, QueryParser jarg1_, long jarg2, int jarg3);
  public final static native void QueryParser_setMaxExpansion__SWIG_2(long jarg1, QueryParser jarg1_, long jarg2);
  public final static native void QueryParser_setMaxWildcardExpansion(long jarg1, QueryParser jarg1_, long jarg2);
  public final static native long QueryParser_parseQuery__SWIG_0(long jarg1, QueryParser jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native long QueryParser_parseQuery__SWIG_1(long jarg1, QueryParser jarg1_, String jarg2, long jarg3);
  public final static native long QueryParser_parseQuery__SWIG_2(long jarg1, QueryParser jarg1_, String jarg2);
  public final static native void QueryParser_addPrefix__SWIG_0(long jarg1, QueryParser jarg1_, String jarg2, String jarg3);
  public final static native void QueryParser_addPrefix__SWIG_1(long jarg1, QueryParser jarg1_, String jarg2, long jarg3, FieldProcessor jarg3_);
  public final static native void QueryParser_addBooleanPrefix__SWIG_0(long jarg1, QueryParser jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native void QueryParser_addBooleanPrefix__SWIG_1(long jarg1, QueryParser jarg1_, String jarg2, String jarg3);
  public final static native void QueryParser_addBooleanPrefix__SWIG_2(long jarg1, QueryParser jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void QueryParser_addBooleanPrefix__SWIG_3(long jarg1, QueryParser jarg1_, String jarg2, long jarg3, FieldProcessor jarg3_, long jarg4);
  public final static native void QueryParser_addBooleanPrefix__SWIG_4(long jarg1, QueryParser jarg1_, String jarg2, long jarg3, FieldProcessor jarg3_);
  public final static native void QueryParser_addBooleanPrefix__SWIG_5(long jarg1, QueryParser jarg1_, String jarg2, long jarg3, FieldProcessor jarg3_, boolean jarg4);
  public final static native long QueryParser_stopListBegin(long jarg1, QueryParser jarg1_);
  public final static native long QueryParser_stopListEnd(long jarg1, QueryParser jarg1_);
  public final static native long QueryParser_unstemBegin(long jarg1, QueryParser jarg1_, String jarg2);
  public final static native long QueryParser_unstemEnd(long jarg1, QueryParser jarg1_, String jarg2);
  public final static native void QueryParser_addRangeprocessor__SWIG_0(long jarg1, QueryParser jarg1_, long jarg2, RangeProcessor jarg2_, long jarg3);
  public final static native void QueryParser_addRangeprocessor__SWIG_1(long jarg1, QueryParser jarg1_, long jarg2, RangeProcessor jarg2_);
  public final static native void QueryParser_addValuerangeprocessor(long jarg1, QueryParser jarg1_, long jarg2, ValueRangeProcessor jarg2_);
  public final static native String QueryParser_getCorrectedQueryString(long jarg1, QueryParser jarg1_);
  public final static native String QueryParser_toString(long jarg1, QueryParser jarg1_);
  public final static native byte[] sortableSerialise(double jarg1);
  public final static native double sortableUnserialise(byte[] jarg1);
  public final static native long new_ValueSetMatchDecider(int jarg1, boolean jarg2);
  public final static native void ValueSetMatchDecider_addValue(long jarg1, ValueSetMatchDecider jarg1_, byte[] jarg2);
  public final static native void ValueSetMatchDecider_removeValue(long jarg1, ValueSetMatchDecider jarg1_, byte[] jarg2);
  public final static native boolean ValueSetMatchDecider_accept(long jarg1, ValueSetMatchDecider jarg1_, long jarg2, Document jarg2_);
  public final static native void delete_ValueSetMatchDecider(long jarg1);
  public final static native int Weight_TWO_STAGE_SMOOTHING_get();
  public final static native int Weight_DIRICHLET_SMOOTHING_get();
  public final static native int Weight_ABSOLUTE_DISCOUNT_SMOOTHING_get();
  public final static native int Weight_JELINEK_MERCER_SMOOTHING_get();
  public final static native int Weight_DIRICHLET_PLUS_SMOOTHING_get();
  public final static native void delete_Weight(long jarg1);
  public final static native String Weight_name(long jarg1, Weight jarg1_);
  public final static native double Weight_getSumPart(long jarg1, Weight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double Weight_getMaxPart(long jarg1, Weight jarg1_);
  public final static native double Weight_getSumExtra(long jarg1, Weight jarg1_, long jarg2, long jarg3);
  public final static native double Weight_getMaxExtra(long jarg1, Weight jarg1_);
  public final static native long new_BoolWeight();
  public final static native String BoolWeight_name(long jarg1, BoolWeight jarg1_);
  public final static native double BoolWeight_getSumPart(long jarg1, BoolWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double BoolWeight_getMaxPart(long jarg1, BoolWeight jarg1_);
  public final static native double BoolWeight_getSumExtra(long jarg1, BoolWeight jarg1_, long jarg2, long jarg3);
  public final static native double BoolWeight_getMaxExtra(long jarg1, BoolWeight jarg1_);
  public final static native void delete_BoolWeight(long jarg1);
  public final static native long new_TfIdfWeight__SWIG_0(String jarg1);
  public final static native long new_TfIdfWeight__SWIG_1();
  public final static native String TfIdfWeight_name(long jarg1, TfIdfWeight jarg1_);
  public final static native double TfIdfWeight_getSumPart(long jarg1, TfIdfWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double TfIdfWeight_getMaxPart(long jarg1, TfIdfWeight jarg1_);
  public final static native double TfIdfWeight_getSumExtra(long jarg1, TfIdfWeight jarg1_, long jarg2, long jarg3);
  public final static native double TfIdfWeight_getMaxExtra(long jarg1, TfIdfWeight jarg1_);
  public final static native void delete_TfIdfWeight(long jarg1);
  public final static native long new_BM25Weight__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_BM25Weight__SWIG_1();
  public final static native String BM25Weight_name(long jarg1, BM25Weight jarg1_);
  public final static native double BM25Weight_getSumPart(long jarg1, BM25Weight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double BM25Weight_getMaxPart(long jarg1, BM25Weight jarg1_);
  public final static native double BM25Weight_getSumExtra(long jarg1, BM25Weight jarg1_, long jarg2, long jarg3);
  public final static native double BM25Weight_getMaxExtra(long jarg1, BM25Weight jarg1_);
  public final static native void delete_BM25Weight(long jarg1);
  public final static native long new_BM25PlusWeight__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_BM25PlusWeight__SWIG_1();
  public final static native String BM25PlusWeight_name(long jarg1, BM25PlusWeight jarg1_);
  public final static native double BM25PlusWeight_getSumPart(long jarg1, BM25PlusWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double BM25PlusWeight_getMaxPart(long jarg1, BM25PlusWeight jarg1_);
  public final static native double BM25PlusWeight_getSumExtra(long jarg1, BM25PlusWeight jarg1_, long jarg2, long jarg3);
  public final static native double BM25PlusWeight_getMaxExtra(long jarg1, BM25PlusWeight jarg1_);
  public final static native void delete_BM25PlusWeight(long jarg1);
  public final static native long new_TradWeight__SWIG_0(double jarg1);
  public final static native long new_TradWeight__SWIG_1();
  public final static native String TradWeight_name(long jarg1, TradWeight jarg1_);
  public final static native double TradWeight_getSumPart(long jarg1, TradWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double TradWeight_getMaxPart(long jarg1, TradWeight jarg1_);
  public final static native double TradWeight_getSumExtra(long jarg1, TradWeight jarg1_, long jarg2, long jarg3);
  public final static native double TradWeight_getMaxExtra(long jarg1, TradWeight jarg1_);
  public final static native void delete_TradWeight(long jarg1);
  public final static native long new_InL2Weight__SWIG_0(double jarg1);
  public final static native long new_InL2Weight__SWIG_1();
  public final static native String InL2Weight_name(long jarg1, InL2Weight jarg1_);
  public final static native double InL2Weight_getSumPart(long jarg1, InL2Weight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double InL2Weight_getMaxPart(long jarg1, InL2Weight jarg1_);
  public final static native double InL2Weight_getSumExtra(long jarg1, InL2Weight jarg1_, long jarg2, long jarg3);
  public final static native double InL2Weight_getMaxExtra(long jarg1, InL2Weight jarg1_);
  public final static native void delete_InL2Weight(long jarg1);
  public final static native long new_IfB2Weight__SWIG_0(double jarg1);
  public final static native long new_IfB2Weight__SWIG_1();
  public final static native String IfB2Weight_name(long jarg1, IfB2Weight jarg1_);
  public final static native double IfB2Weight_getSumPart(long jarg1, IfB2Weight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double IfB2Weight_getMaxPart(long jarg1, IfB2Weight jarg1_);
  public final static native double IfB2Weight_getSumExtra(long jarg1, IfB2Weight jarg1_, long jarg2, long jarg3);
  public final static native double IfB2Weight_getMaxExtra(long jarg1, IfB2Weight jarg1_);
  public final static native void delete_IfB2Weight(long jarg1);
  public final static native long new_IneB2Weight__SWIG_0(double jarg1);
  public final static native long new_IneB2Weight__SWIG_1();
  public final static native String IneB2Weight_name(long jarg1, IneB2Weight jarg1_);
  public final static native double IneB2Weight_getSumPart(long jarg1, IneB2Weight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double IneB2Weight_getMaxPart(long jarg1, IneB2Weight jarg1_);
  public final static native double IneB2Weight_getSumExtra(long jarg1, IneB2Weight jarg1_, long jarg2, long jarg3);
  public final static native double IneB2Weight_getMaxExtra(long jarg1, IneB2Weight jarg1_);
  public final static native void delete_IneB2Weight(long jarg1);
  public final static native long new_BB2Weight__SWIG_0(double jarg1);
  public final static native long new_BB2Weight__SWIG_1();
  public final static native String BB2Weight_name(long jarg1, BB2Weight jarg1_);
  public final static native double BB2Weight_getSumPart(long jarg1, BB2Weight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double BB2Weight_getMaxPart(long jarg1, BB2Weight jarg1_);
  public final static native double BB2Weight_getSumExtra(long jarg1, BB2Weight jarg1_, long jarg2, long jarg3);
  public final static native double BB2Weight_getMaxExtra(long jarg1, BB2Weight jarg1_);
  public final static native void delete_BB2Weight(long jarg1);
  public final static native long new_DLHWeight();
  public final static native String DLHWeight_name(long jarg1, DLHWeight jarg1_);
  public final static native double DLHWeight_getSumPart(long jarg1, DLHWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double DLHWeight_getMaxPart(long jarg1, DLHWeight jarg1_);
  public final static native double DLHWeight_getSumExtra(long jarg1, DLHWeight jarg1_, long jarg2, long jarg3);
  public final static native double DLHWeight_getMaxExtra(long jarg1, DLHWeight jarg1_);
  public final static native void delete_DLHWeight(long jarg1);
  public final static native long new_PL2Weight__SWIG_0(double jarg1);
  public final static native long new_PL2Weight__SWIG_1();
  public final static native String PL2Weight_name(long jarg1, PL2Weight jarg1_);
  public final static native double PL2Weight_getSumPart(long jarg1, PL2Weight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double PL2Weight_getMaxPart(long jarg1, PL2Weight jarg1_);
  public final static native double PL2Weight_getSumExtra(long jarg1, PL2Weight jarg1_, long jarg2, long jarg3);
  public final static native double PL2Weight_getMaxExtra(long jarg1, PL2Weight jarg1_);
  public final static native void delete_PL2Weight(long jarg1);
  public final static native long new_PL2PlusWeight__SWIG_0(double jarg1, double jarg2);
  public final static native long new_PL2PlusWeight__SWIG_1();
  public final static native String PL2PlusWeight_name(long jarg1, PL2PlusWeight jarg1_);
  public final static native double PL2PlusWeight_getSumPart(long jarg1, PL2PlusWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double PL2PlusWeight_getMaxPart(long jarg1, PL2PlusWeight jarg1_);
  public final static native double PL2PlusWeight_getSumExtra(long jarg1, PL2PlusWeight jarg1_, long jarg2, long jarg3);
  public final static native double PL2PlusWeight_getMaxExtra(long jarg1, PL2PlusWeight jarg1_);
  public final static native void delete_PL2PlusWeight(long jarg1);
  public final static native long new_DPHWeight();
  public final static native String DPHWeight_name(long jarg1, DPHWeight jarg1_);
  public final static native double DPHWeight_getSumPart(long jarg1, DPHWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double DPHWeight_getMaxPart(long jarg1, DPHWeight jarg1_);
  public final static native double DPHWeight_getSumExtra(long jarg1, DPHWeight jarg1_, long jarg2, long jarg3);
  public final static native double DPHWeight_getMaxExtra(long jarg1, DPHWeight jarg1_);
  public final static native void delete_DPHWeight(long jarg1);
  public final static native long new_LMWeight__SWIG_0(double jarg1, int jarg2, double jarg3, double jarg4);
  public final static native long new_LMWeight__SWIG_1(double jarg1, int jarg2, double jarg3);
  public final static native long new_LMWeight__SWIG_2(double jarg1, int jarg2);
  public final static native long new_LMWeight__SWIG_3(double jarg1);
  public final static native long new_LMWeight__SWIG_4();
  public final static native String LMWeight_name(long jarg1, LMWeight jarg1_);
  public final static native double LMWeight_getSumPart(long jarg1, LMWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double LMWeight_getMaxPart(long jarg1, LMWeight jarg1_);
  public final static native double LMWeight_getSumExtra(long jarg1, LMWeight jarg1_, long jarg2, long jarg3);
  public final static native double LMWeight_getMaxExtra(long jarg1, LMWeight jarg1_);
  public final static native void delete_LMWeight(long jarg1);
  public final static native void CoordWeight_init(long jarg1, CoordWeight jarg1_, double jarg2);
  public final static native long new_CoordWeight();
  public final static native String CoordWeight_name(long jarg1, CoordWeight jarg1_);
  public final static native double CoordWeight_getSumPart(long jarg1, CoordWeight jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double CoordWeight_getMaxPart(long jarg1, CoordWeight jarg1_);
  public final static native double CoordWeight_getSumExtra(long jarg1, CoordWeight jarg1_, long jarg2, long jarg3);
  public final static native double CoordWeight_getMaxExtra(long jarg1, CoordWeight jarg1_);
  public final static native void delete_CoordWeight(long jarg1);
  public final static native int Compactor_STANDARD_get();
  public final static native int Compactor_FULL_get();
  public final static native int Compactor_FULLER_get();
  public final static native long new_Compactor();
  public final static native void delete_Compactor(long jarg1);
  public final static native void Compactor_setBlockSize(long jarg1, Compactor jarg1_, long jarg2);
  public final static native void Compactor_setRenumber(long jarg1, Compactor jarg1_, boolean jarg2);
  public final static native void Compactor_setMultipass(long jarg1, Compactor jarg1_, boolean jarg2);
  public final static native void Compactor_setCompactionLevel(long jarg1, Compactor jarg1_, int jarg2);
  public final static native void Compactor_setDestdir(long jarg1, Compactor jarg1_, String jarg2);
  public final static native void Compactor_addSource(long jarg1, Compactor jarg1_, String jarg2);
  public final static native void Compactor_compact(long jarg1, Compactor jarg1_);
  public final static native void Compactor_setStatus(long jarg1, Compactor jarg1_, String jarg2, String jarg3);
  public final static native void Compactor_setStatusSwigExplicitCompactor(long jarg1, Compactor jarg1_, String jarg2, String jarg3);
  public final static native String Compactor_resolveDuplicateMetadata(long jarg1, Compactor jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native String Compactor_resolveDuplicateMetadataSwigExplicitCompactor(long jarg1, Compactor jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void Compactor_director_connect(Compactor obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Compactor_change_ownership(Compactor obj, long cptr, boolean take_or_release);
  public final static native long new_PostingSource();
  public final static native void delete_PostingSource(long jarg1);
  public final static native long PostingSource_getTermfreqMin(long jarg1, PostingSource jarg1_);
  public final static native long PostingSource_getTermfreqEst(long jarg1, PostingSource jarg1_);
  public final static native long PostingSource_getTermfreqMax(long jarg1, PostingSource jarg1_);
  public final static native void PostingSource_setMaxweight(long jarg1, PostingSource jarg1_, double jarg2);
  public final static native double PostingSource_getMaxweight(long jarg1, PostingSource jarg1_);
  public final static native double PostingSource_getWeight(long jarg1, PostingSource jarg1_);
  public final static native double PostingSource_getWeightSwigExplicitPostingSource(long jarg1, PostingSource jarg1_);
  public final static native long PostingSource_getDocId(long jarg1, PostingSource jarg1_);
  public final static native void PostingSource_next(long jarg1, PostingSource jarg1_, double jarg2);
  public final static native void PostingSource_skipTo(long jarg1, PostingSource jarg1_, long jarg2, double jarg3);
  public final static native void PostingSource_skipToSwigExplicitPostingSource(long jarg1, PostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean PostingSource_check(long jarg1, PostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean PostingSource_checkSwigExplicitPostingSource(long jarg1, PostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean PostingSource_atEnd(long jarg1, PostingSource jarg1_);
  public final static native String PostingSource_name(long jarg1, PostingSource jarg1_);
  public final static native String PostingSource_nameSwigExplicitPostingSource(long jarg1, PostingSource jarg1_);
  public final static native void PostingSource_init(long jarg1, PostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native String PostingSource_toString(long jarg1, PostingSource jarg1_);
  public final static native String PostingSource_toStringSwigExplicitPostingSource(long jarg1, PostingSource jarg1_);
  public final static native long PostingSource_release(long jarg1, PostingSource jarg1_);
  public final static native void PostingSource_director_connect(PostingSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void PostingSource_change_ownership(PostingSource obj, long cptr, boolean take_or_release);
  public final static native long new_ValuePostingSource(int jarg1);
  public final static native long ValuePostingSource_getTermfreqMin(long jarg1, ValuePostingSource jarg1_);
  public final static native long ValuePostingSource_getTermfreqMinSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_);
  public final static native long ValuePostingSource_getTermfreqEst(long jarg1, ValuePostingSource jarg1_);
  public final static native long ValuePostingSource_getTermfreqEstSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_);
  public final static native long ValuePostingSource_getTermfreqMax(long jarg1, ValuePostingSource jarg1_);
  public final static native long ValuePostingSource_getTermfreqMaxSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_);
  public final static native void ValuePostingSource_next(long jarg1, ValuePostingSource jarg1_, double jarg2);
  public final static native void ValuePostingSource_nextSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_, double jarg2);
  public final static native void ValuePostingSource_skipTo(long jarg1, ValuePostingSource jarg1_, long jarg2, double jarg3);
  public final static native void ValuePostingSource_skipToSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean ValuePostingSource_check(long jarg1, ValuePostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean ValuePostingSource_checkSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean ValuePostingSource_atEnd(long jarg1, ValuePostingSource jarg1_);
  public final static native boolean ValuePostingSource_atEndSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_);
  public final static native long ValuePostingSource_getDocId(long jarg1, ValuePostingSource jarg1_);
  public final static native long ValuePostingSource_getDocIdSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_);
  public final static native void ValuePostingSource_init(long jarg1, ValuePostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native void ValuePostingSource_initSwigExplicitValuePostingSource(long jarg1, ValuePostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native long ValuePostingSource_getDatabase(long jarg1, ValuePostingSource jarg1_);
  public final static native int ValuePostingSource_getSlot(long jarg1, ValuePostingSource jarg1_);
  public final static native byte[] ValuePostingSource_getValue(long jarg1, ValuePostingSource jarg1_);
  public final static native void ValuePostingSource_done(long jarg1, ValuePostingSource jarg1_);
  public final static native boolean ValuePostingSource_getStarted(long jarg1, ValuePostingSource jarg1_);
  public final static native void ValuePostingSource_setTermfreqMin(long jarg1, ValuePostingSource jarg1_, long jarg2);
  public final static native void ValuePostingSource_setTermfreqEst(long jarg1, ValuePostingSource jarg1_, long jarg2);
  public final static native void ValuePostingSource_setTermfreqMax(long jarg1, ValuePostingSource jarg1_, long jarg2);
  public final static native void delete_ValuePostingSource(long jarg1);
  public final static native void ValuePostingSource_director_connect(ValuePostingSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ValuePostingSource_change_ownership(ValuePostingSource obj, long cptr, boolean take_or_release);
  public final static native long new_ValueWeightPostingSource(int jarg1);
  public final static native double ValueWeightPostingSource_getWeight(long jarg1, ValueWeightPostingSource jarg1_);
  public final static native double ValueWeightPostingSource_getWeightSwigExplicitValueWeightPostingSource(long jarg1, ValueWeightPostingSource jarg1_);
  public final static native String ValueWeightPostingSource_name(long jarg1, ValueWeightPostingSource jarg1_);
  public final static native String ValueWeightPostingSource_nameSwigExplicitValueWeightPostingSource(long jarg1, ValueWeightPostingSource jarg1_);
  public final static native void ValueWeightPostingSource_init(long jarg1, ValueWeightPostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native void ValueWeightPostingSource_initSwigExplicitValueWeightPostingSource(long jarg1, ValueWeightPostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native String ValueWeightPostingSource_toString(long jarg1, ValueWeightPostingSource jarg1_);
  public final static native String ValueWeightPostingSource_toStringSwigExplicitValueWeightPostingSource(long jarg1, ValueWeightPostingSource jarg1_);
  public final static native void delete_ValueWeightPostingSource(long jarg1);
  public final static native void ValueWeightPostingSource_director_connect(ValueWeightPostingSource obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ValueWeightPostingSource_change_ownership(ValueWeightPostingSource obj, long cptr, boolean take_or_release);
  public final static native long new_DecreasingValueWeightPostingSource__SWIG_0(int jarg1, long jarg2, long jarg3);
  public final static native long new_DecreasingValueWeightPostingSource__SWIG_1(int jarg1, long jarg2);
  public final static native long new_DecreasingValueWeightPostingSource__SWIG_2(int jarg1);
  public final static native double DecreasingValueWeightPostingSource_getWeight(long jarg1, DecreasingValueWeightPostingSource jarg1_);
  public final static native String DecreasingValueWeightPostingSource_name(long jarg1, DecreasingValueWeightPostingSource jarg1_);
  public final static native void DecreasingValueWeightPostingSource_init(long jarg1, DecreasingValueWeightPostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native void DecreasingValueWeightPostingSource_next(long jarg1, DecreasingValueWeightPostingSource jarg1_, double jarg2);
  public final static native void DecreasingValueWeightPostingSource_skipTo(long jarg1, DecreasingValueWeightPostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean DecreasingValueWeightPostingSource_check(long jarg1, DecreasingValueWeightPostingSource jarg1_, long jarg2, double jarg3);
  public final static native String DecreasingValueWeightPostingSource_toString(long jarg1, DecreasingValueWeightPostingSource jarg1_);
  public final static native void delete_DecreasingValueWeightPostingSource(long jarg1);
  public final static native long new_ValueMapPostingSource(int jarg1);
  public final static native void ValueMapPostingSource_addMapping(long jarg1, ValueMapPostingSource jarg1_, String jarg2, double jarg3);
  public final static native void ValueMapPostingSource_clearMappings(long jarg1, ValueMapPostingSource jarg1_);
  public final static native void ValueMapPostingSource_setDefaultWeight(long jarg1, ValueMapPostingSource jarg1_, double jarg2);
  public final static native double ValueMapPostingSource_getWeight(long jarg1, ValueMapPostingSource jarg1_);
  public final static native String ValueMapPostingSource_name(long jarg1, ValueMapPostingSource jarg1_);
  public final static native void ValueMapPostingSource_init(long jarg1, ValueMapPostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native String ValueMapPostingSource_toString(long jarg1, ValueMapPostingSource jarg1_);
  public final static native void delete_ValueMapPostingSource(long jarg1);
  public final static native long new_FixedWeightPostingSource(double jarg1);
  public final static native long FixedWeightPostingSource_getTermfreqMin(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native long FixedWeightPostingSource_getTermfreqEst(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native long FixedWeightPostingSource_getTermfreqMax(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native double FixedWeightPostingSource_getWeight(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native void FixedWeightPostingSource_next(long jarg1, FixedWeightPostingSource jarg1_, double jarg2);
  public final static native void FixedWeightPostingSource_skipTo(long jarg1, FixedWeightPostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean FixedWeightPostingSource_check(long jarg1, FixedWeightPostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean FixedWeightPostingSource_atEnd(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native long FixedWeightPostingSource_getDocId(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native String FixedWeightPostingSource_name(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native void FixedWeightPostingSource_init(long jarg1, FixedWeightPostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native String FixedWeightPostingSource_toString(long jarg1, FixedWeightPostingSource jarg1_);
  public final static native void delete_FixedWeightPostingSource(long jarg1);
  public final static native long new_MatchSpy();
  public final static native void delete_MatchSpy(long jarg1);
  public final static native void MatchSpy_apply(long jarg1, MatchSpy jarg1_, long jarg2, Document jarg2_, double jarg3);
  public final static native String MatchSpy_name(long jarg1, MatchSpy jarg1_);
  public final static native String MatchSpy_nameSwigExplicitMatchSpy(long jarg1, MatchSpy jarg1_);
  public final static native void MatchSpy_mergeResults(long jarg1, MatchSpy jarg1_, byte[] jarg2);
  public final static native void MatchSpy_mergeResultsSwigExplicitMatchSpy(long jarg1, MatchSpy jarg1_, byte[] jarg2);
  public final static native String MatchSpy_toString(long jarg1, MatchSpy jarg1_);
  public final static native String MatchSpy_toStringSwigExplicitMatchSpy(long jarg1, MatchSpy jarg1_);
  public final static native long MatchSpy_release(long jarg1, MatchSpy jarg1_);
  public final static native void MatchSpy_director_connect(MatchSpy obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void MatchSpy_change_ownership(MatchSpy obj, long cptr, boolean take_or_release);
  public final static native long new_ValueCountMatchSpy__SWIG_0();
  public final static native long new_ValueCountMatchSpy__SWIG_1(int jarg1);
  public final static native long ValueCountMatchSpy_getTotal(long jarg1, ValueCountMatchSpy jarg1_);
  public final static native long ValueCountMatchSpy_valuesBegin(long jarg1, ValueCountMatchSpy jarg1_);
  public final static native long ValueCountMatchSpy_valuesEnd(long jarg1, ValueCountMatchSpy jarg1_);
  public final static native long ValueCountMatchSpy_topValuesBegin(long jarg1, ValueCountMatchSpy jarg1_, long jarg2);
  public final static native long ValueCountMatchSpy_topValuesEnd(long jarg1, ValueCountMatchSpy jarg1_, long jarg2);
  public final static native void ValueCountMatchSpy_apply(long jarg1, ValueCountMatchSpy jarg1_, long jarg2, Document jarg2_, double jarg3);
  public final static native String ValueCountMatchSpy_name(long jarg1, ValueCountMatchSpy jarg1_);
  public final static native void ValueCountMatchSpy_mergeResults(long jarg1, ValueCountMatchSpy jarg1_, byte[] jarg2);
  public final static native String ValueCountMatchSpy_toString(long jarg1, ValueCountMatchSpy jarg1_);
  public final static native void delete_ValueCountMatchSpy(long jarg1);
  public final static native double milesToMetres(double jarg1);
  public final static native double metresToMiles(double jarg1);
  public final static native void LatLongCoord_latitude_set(long jarg1, LatLongCoord jarg1_, double jarg2);
  public final static native double LatLongCoord_latitude_get(long jarg1, LatLongCoord jarg1_);
  public final static native void LatLongCoord_longitude_set(long jarg1, LatLongCoord jarg1_, double jarg2);
  public final static native double LatLongCoord_longitude_get(long jarg1, LatLongCoord jarg1_);
  public final static native long new_LatLongCoord__SWIG_0();
  public final static native long new_LatLongCoord__SWIG_1(double jarg1, double jarg2);
  public final static native void LatLongCoord_unserialise(long jarg1, LatLongCoord jarg1_, byte[] jarg2);
  public final static native byte[] LatLongCoord_serialise(long jarg1, LatLongCoord jarg1_);
  public final static native String LatLongCoord_toString(long jarg1, LatLongCoord jarg1_);
  public final static native void delete_LatLongCoord(long jarg1);
  public final static native long new_LatLongCoordsIterator();
  public final static native boolean LatLongCoordsIterator_equals(long jarg1, LatLongCoordsIterator jarg1_, long jarg2, LatLongCoordsIterator jarg2_);
  public final static native long LatLongCoordsIterator_getCoord(long jarg1, LatLongCoordsIterator jarg1_);
  public final static native long LatLongCoordsIterator_next(long jarg1, LatLongCoordsIterator jarg1_);
  public final static native void delete_LatLongCoordsIterator(long jarg1);
  public final static native long LatLongCoords_begin(long jarg1, LatLongCoords jarg1_);
  public final static native long LatLongCoords_end(long jarg1, LatLongCoords jarg1_);
  public final static native long LatLongCoords_size(long jarg1, LatLongCoords jarg1_);
  public final static native boolean LatLongCoords_empty(long jarg1, LatLongCoords jarg1_);
  public final static native void LatLongCoords_append(long jarg1, LatLongCoords jarg1_, long jarg2, LatLongCoord jarg2_);
  public final static native long new_LatLongCoords__SWIG_0();
  public final static native long new_LatLongCoords__SWIG_1(long jarg1, LatLongCoord jarg1_);
  public final static native void LatLongCoords_unserialise(long jarg1, LatLongCoords jarg1_, byte[] jarg2);
  public final static native byte[] LatLongCoords_serialise(long jarg1, LatLongCoords jarg1_);
  public final static native String LatLongCoords_toString(long jarg1, LatLongCoords jarg1_);
  public final static native void delete_LatLongCoords(long jarg1);
  public final static native void delete_LatLongMetric(long jarg1);
  public final static native double LatLongMetric_pointwiseDistance(long jarg1, LatLongMetric jarg1_, long jarg2, LatLongCoord jarg2_, long jarg3, LatLongCoord jarg3_);
  public final static native double LatLongMetric_apply__SWIG_0(long jarg1, LatLongMetric jarg1_, long jarg2, LatLongCoords jarg2_, long jarg3, LatLongCoords jarg3_);
  public final static native double LatLongMetric_apply__SWIG_1(long jarg1, LatLongMetric jarg1_, long jarg2, LatLongCoords jarg2_, String jarg3);
  public final static native double LatLongMetric_apply__SWIG_2(long jarg1, LatLongMetric jarg1_, long jarg2, LatLongCoords jarg2_, String jarg3, long jarg4);
  public final static native String LatLongMetric_name(long jarg1, LatLongMetric jarg1_);
  public final static native long new_LatLongMetric();
  public final static native void LatLongMetric_director_connect(LatLongMetric obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void LatLongMetric_change_ownership(LatLongMetric obj, long cptr, boolean take_or_release);
  public final static native long new_GreatCircleMetric__SWIG_0();
  public final static native long new_GreatCircleMetric__SWIG_1(double jarg1);
  public final static native double GreatCircleMetric_pointwiseDistance(long jarg1, GreatCircleMetric jarg1_, long jarg2, LatLongCoord jarg2_, long jarg3, LatLongCoord jarg3_);
  public final static native String GreatCircleMetric_name(long jarg1, GreatCircleMetric jarg1_);
  public final static native void delete_GreatCircleMetric(long jarg1);
  public final static native long new_LatLongDistancePostingSource__SWIG_0(int jarg1, long jarg2, LatLongCoords jarg2_, long jarg3, LatLongMetric jarg3_, double jarg4, double jarg5, double jarg6);
  public final static native long new_LatLongDistancePostingSource__SWIG_1(int jarg1, long jarg2, LatLongCoords jarg2_, long jarg3, LatLongMetric jarg3_, double jarg4, double jarg5);
  public final static native long new_LatLongDistancePostingSource__SWIG_2(int jarg1, long jarg2, LatLongCoords jarg2_, long jarg3, LatLongMetric jarg3_, double jarg4);
  public final static native long new_LatLongDistancePostingSource__SWIG_3(int jarg1, long jarg2, LatLongCoords jarg2_, long jarg3, LatLongMetric jarg3_);
  public final static native long new_LatLongDistancePostingSource__SWIG_4(int jarg1, long jarg2, LatLongCoords jarg2_, double jarg3, double jarg4, double jarg5);
  public final static native long new_LatLongDistancePostingSource__SWIG_5(int jarg1, long jarg2, LatLongCoords jarg2_, double jarg3, double jarg4);
  public final static native long new_LatLongDistancePostingSource__SWIG_6(int jarg1, long jarg2, LatLongCoords jarg2_, double jarg3);
  public final static native long new_LatLongDistancePostingSource__SWIG_7(int jarg1, long jarg2, LatLongCoords jarg2_);
  public final static native void delete_LatLongDistancePostingSource(long jarg1);
  public final static native void LatLongDistancePostingSource_next(long jarg1, LatLongDistancePostingSource jarg1_, double jarg2);
  public final static native void LatLongDistancePostingSource_skipTo(long jarg1, LatLongDistancePostingSource jarg1_, long jarg2, double jarg3);
  public final static native boolean LatLongDistancePostingSource_check(long jarg1, LatLongDistancePostingSource jarg1_, long jarg2, double jarg3);
  public final static native double LatLongDistancePostingSource_getWeight(long jarg1, LatLongDistancePostingSource jarg1_);
  public final static native String LatLongDistancePostingSource_name(long jarg1, LatLongDistancePostingSource jarg1_);
  public final static native void LatLongDistancePostingSource_init(long jarg1, LatLongDistancePostingSource jarg1_, long jarg2, Database jarg2_);
  public final static native String LatLongDistancePostingSource_toString(long jarg1, LatLongDistancePostingSource jarg1_);
  public final static native long new_LatLongDistanceKeyMaker__SWIG_0(int jarg1, long jarg2, LatLongCoords jarg2_, long jarg3, LatLongMetric jarg3_, double jarg4);
  public final static native long new_LatLongDistanceKeyMaker__SWIG_1(int jarg1, long jarg2, LatLongCoords jarg2_, long jarg3, LatLongMetric jarg3_);
  public final static native long new_LatLongDistanceKeyMaker__SWIG_2(int jarg1, long jarg2, LatLongCoords jarg2_);
  public final static native long new_LatLongDistanceKeyMaker__SWIG_3(int jarg1, long jarg2, LatLongCoord jarg2_, long jarg3, LatLongMetric jarg3_, double jarg4);
  public final static native long new_LatLongDistanceKeyMaker__SWIG_4(int jarg1, long jarg2, LatLongCoord jarg2_, long jarg3, LatLongMetric jarg3_);
  public final static native long new_LatLongDistanceKeyMaker__SWIG_5(int jarg1, long jarg2, LatLongCoord jarg2_);
  public final static native void delete_LatLongDistanceKeyMaker(long jarg1);
  public final static native String LatLongDistanceKeyMaker_apply(long jarg1, LatLongDistanceKeyMaker jarg1_, long jarg2, Document jarg2_);
  public final static native void Database_addDatabase(long jarg1, Database jarg1_, long jarg2, Database jarg2_);
  public final static native long new_Database__SWIG_0();
  public final static native long new_Database__SWIG_1(String jarg1, int jarg2);
  public final static native long new_Database__SWIG_2(String jarg1);
  public final static native long new_Database__SWIG_3(int jarg1, int jarg2);
  public final static native long new_Database__SWIG_4(int jarg1);
  public final static native void delete_Database(long jarg1);
  public final static native boolean Database_reopen(long jarg1, Database jarg1_);
  public final static native void Database_close(long jarg1, Database jarg1_);
  public final static native String Database_toString(long jarg1, Database jarg1_);
  public final static native long Database_postListBegin(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_postListEnd(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_termListBegin(long jarg1, Database jarg1_, long jarg2);
  public final static native long Database_termListEnd(long jarg1, Database jarg1_, long jarg2);
  public final static native boolean Database_hasPositions(long jarg1, Database jarg1_);
  public final static native long Database_positionListBegin(long jarg1, Database jarg1_, long jarg2, String jarg3);
  public final static native long Database_positionListEnd(long jarg1, Database jarg1_, long jarg2, String jarg3);
  public final static native long Database_allTermsBegin__SWIG_0(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_allTermsBegin__SWIG_1(long jarg1, Database jarg1_);
  public final static native long Database_allTermsEnd__SWIG_0(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_allTermsEnd__SWIG_1(long jarg1, Database jarg1_);
  public final static native long Database_getDocCount(long jarg1, Database jarg1_);
  public final static native long Database_getLastDocId(long jarg1, Database jarg1_);
  public final static native double Database_getAvLength(long jarg1, Database jarg1_);
  public final static native long Database_getTotalLength(long jarg1, Database jarg1_);
  public final static native long Database_getTermFreq(long jarg1, Database jarg1_, String jarg2);
  public final static native boolean Database_termExists(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_getCollectionFreq(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_getValueFreq(long jarg1, Database jarg1_, int jarg2);
  public final static native byte[] Database_getValueLowerBound(long jarg1, Database jarg1_, int jarg2);
  public final static native byte[] Database_getValueUpperBound(long jarg1, Database jarg1_, int jarg2);
  public final static native long Database_getDoclengthLowerBound(long jarg1, Database jarg1_);
  public final static native long Database_getDoclengthUpperBound(long jarg1, Database jarg1_);
  public final static native long Database_getWdfUpperBound(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_valuestreamBegin(long jarg1, Database jarg1_, int jarg2);
  public final static native long Database_valuestreamEnd(long jarg1, Database jarg1_, int jarg2);
  public final static native long Database_getDocLength(long jarg1, Database jarg1_, long jarg2);
  public final static native long Database_getUniqueTerms(long jarg1, Database jarg1_, long jarg2);
  public final static native void Database_keepAlive(long jarg1, Database jarg1_);
  public final static native long Database_getDocument__SWIG_0(long jarg1, Database jarg1_, long jarg2);
  public final static native long Database_getDocument__SWIG_1(long jarg1, Database jarg1_, long jarg2, long jarg3);
  public final static native String Database_getSpellingSuggestion__SWIG_0(long jarg1, Database jarg1_, String jarg2, long jarg3);
  public final static native String Database_getSpellingSuggestion__SWIG_1(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_spellingsBegin(long jarg1, Database jarg1_);
  public final static native long Database_spellingsEnd(long jarg1, Database jarg1_);
  public final static native long Database_synonymsBegin(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_synonymsEnd(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_synonymKeysBegin__SWIG_0(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_synonymKeysBegin__SWIG_1(long jarg1, Database jarg1_);
  public final static native long Database_synonymKeysEnd__SWIG_0(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_synonymKeysEnd__SWIG_1(long jarg1, Database jarg1_);
  public final static native String Database_getMetadata(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_metadataKeysBegin__SWIG_0(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_metadataKeysBegin__SWIG_1(long jarg1, Database jarg1_);
  public final static native long Database_metadataKeysEnd__SWIG_0(long jarg1, Database jarg1_, String jarg2);
  public final static native long Database_metadataKeysEnd__SWIG_1(long jarg1, Database jarg1_);
  public final static native String Database_getUuid(long jarg1, Database jarg1_);
  public final static native boolean Database_locked(long jarg1, Database jarg1_);
  public final static native long Database_getRevision(long jarg1, Database jarg1_);
  public final static native long Database_check__SWIG_0(String jarg1, int jarg2);
  public final static native long Database_check__SWIG_1(String jarg1);
  public final static native long Database_check__SWIG_2(int jarg1, int jarg2);
  public final static native long Database_check__SWIG_3(int jarg1);
  public final static native void Database_compact__SWIG_0(long jarg1, Database jarg1_, String jarg2, long jarg3, int jarg4);
  public final static native void Database_compact__SWIG_1(long jarg1, Database jarg1_, String jarg2, long jarg3);
  public final static native void Database_compact__SWIG_2(long jarg1, Database jarg1_, String jarg2);
  public final static native void Database_compact__SWIG_3(long jarg1, Database jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void Database_compact__SWIG_4(long jarg1, Database jarg1_, int jarg2, long jarg3);
  public final static native void Database_compact__SWIG_5(long jarg1, Database jarg1_, int jarg2);
  public final static native void Database_compact__SWIG_6(long jarg1, Database jarg1_, String jarg2, long jarg3, int jarg4, long jarg5, Compactor jarg5_);
  public final static native void Database_compact__SWIG_7(long jarg1, Database jarg1_, int jarg2, long jarg3, int jarg4, long jarg5, Compactor jarg5_);
  public final static native void delete_WritableDatabase(long jarg1);
  public final static native long new_WritableDatabase__SWIG_0();
  public final static native long new_WritableDatabase__SWIG_1(String jarg1, int jarg2, int jarg3);
  public final static native long new_WritableDatabase__SWIG_2(String jarg1, int jarg2);
  public final static native long new_WritableDatabase__SWIG_3(String jarg1);
  public final static native void WritableDatabase_commit(long jarg1, WritableDatabase jarg1_);
  public final static native void WritableDatabase_flush(long jarg1, WritableDatabase jarg1_);
  public final static native void WritableDatabase_beginTransaction__SWIG_0(long jarg1, WritableDatabase jarg1_, boolean jarg2);
  public final static native void WritableDatabase_beginTransaction__SWIG_1(long jarg1, WritableDatabase jarg1_);
  public final static native void WritableDatabase_commitTransaction(long jarg1, WritableDatabase jarg1_);
  public final static native void WritableDatabase_cancelTransaction(long jarg1, WritableDatabase jarg1_);
  public final static native long WritableDatabase_addDocument(long jarg1, WritableDatabase jarg1_, long jarg2, Document jarg2_);
  public final static native void WritableDatabase_deleteDocument__SWIG_0(long jarg1, WritableDatabase jarg1_, long jarg2);
  public final static native void WritableDatabase_deleteDocument__SWIG_1(long jarg1, WritableDatabase jarg1_, String jarg2);
  public final static native void WritableDatabase_replaceDocument__SWIG_0(long jarg1, WritableDatabase jarg1_, long jarg2, long jarg3, Document jarg3_);
  public final static native long WritableDatabase_replaceDocument__SWIG_1(long jarg1, WritableDatabase jarg1_, String jarg2, long jarg3, Document jarg3_);
  public final static native void WritableDatabase_addSpelling__SWIG_0(long jarg1, WritableDatabase jarg1_, String jarg2, long jarg3);
  public final static native void WritableDatabase_addSpelling__SWIG_1(long jarg1, WritableDatabase jarg1_, String jarg2);
  public final static native void WritableDatabase_removeSpelling__SWIG_0(long jarg1, WritableDatabase jarg1_, String jarg2, long jarg3);
  public final static native void WritableDatabase_removeSpelling__SWIG_1(long jarg1, WritableDatabase jarg1_, String jarg2);
  public final static native void WritableDatabase_addSynonym(long jarg1, WritableDatabase jarg1_, String jarg2, String jarg3);
  public final static native void WritableDatabase_removeSynonym(long jarg1, WritableDatabase jarg1_, String jarg2, String jarg3);
  public final static native void WritableDatabase_clearSynonyms(long jarg1, WritableDatabase jarg1_, String jarg2);
  public final static native void WritableDatabase_setMetadata(long jarg1, WritableDatabase jarg1_, String jarg2, String jarg3);
  public final static native String WritableDatabase_toString(long jarg1, WritableDatabase jarg1_);
  public final static native long Auto_openStub(String jarg1);
  public final static native long Chert_open__SWIG_0(String jarg1);
  public final static native long Chert_open__SWIG_1(String jarg1, int jarg2, int jarg3);
  public final static native long Chert_open__SWIG_2(String jarg1, int jarg2);
  public final static native long InMemory_open();
  public final static native long Remote_open__SWIG_0(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long Remote_open__SWIG_1(String jarg1, long jarg2, long jarg3);
  public final static native long Remote_open__SWIG_2(String jarg1, long jarg2);
  public final static native long Remote_openWritable__SWIG_0(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long Remote_openWritable__SWIG_1(String jarg1, long jarg2, long jarg3);
  public final static native long Remote_openWritable__SWIG_2(String jarg1, long jarg2);
  public final static native long Remote_open__SWIG_3(String jarg1, String jarg2, long jarg3);
  public final static native long Remote_open__SWIG_4(String jarg1, String jarg2);
  public final static native long Remote_openWritable__SWIG_3(String jarg1, String jarg2, long jarg3);
  public final static native long Remote_openWritable__SWIG_4(String jarg1, String jarg2);
  public final static native int getBAD_VALUENO();
  public final static native long ExpandDeciderAnd_SWIGUpcast(long jarg1);
  public final static native long ExpandDeciderFilterPrefix_SWIGUpcast(long jarg1);
  public final static native long MultiValueKeyMaker_SWIGUpcast(long jarg1);
  public final static native long SimpleStopper_SWIGUpcast(long jarg1);
  public final static native long DateRangeProcessor_SWIGUpcast(long jarg1);
  public final static native long NumberRangeProcessor_SWIGUpcast(long jarg1);
  public final static native long StringValueRangeProcessor_SWIGUpcast(long jarg1);
  public final static native long DateValueRangeProcessor_SWIGUpcast(long jarg1);
  public final static native long NumberValueRangeProcessor_SWIGUpcast(long jarg1);
  public final static native long ValueSetMatchDecider_SWIGUpcast(long jarg1);
  public final static native long BoolWeight_SWIGUpcast(long jarg1);
  public final static native long TfIdfWeight_SWIGUpcast(long jarg1);
  public final static native long BM25Weight_SWIGUpcast(long jarg1);
  public final static native long BM25PlusWeight_SWIGUpcast(long jarg1);
  public final static native long TradWeight_SWIGUpcast(long jarg1);
  public final static native long InL2Weight_SWIGUpcast(long jarg1);
  public final static native long IfB2Weight_SWIGUpcast(long jarg1);
  public final static native long IneB2Weight_SWIGUpcast(long jarg1);
  public final static native long BB2Weight_SWIGUpcast(long jarg1);
  public final static native long DLHWeight_SWIGUpcast(long jarg1);
  public final static native long PL2Weight_SWIGUpcast(long jarg1);
  public final static native long PL2PlusWeight_SWIGUpcast(long jarg1);
  public final static native long DPHWeight_SWIGUpcast(long jarg1);
  public final static native long LMWeight_SWIGUpcast(long jarg1);
  public final static native long CoordWeight_SWIGUpcast(long jarg1);
  public final static native long ValuePostingSource_SWIGUpcast(long jarg1);
  public final static native long ValueWeightPostingSource_SWIGUpcast(long jarg1);
  public final static native long DecreasingValueWeightPostingSource_SWIGUpcast(long jarg1);
  public final static native long ValueMapPostingSource_SWIGUpcast(long jarg1);
  public final static native long FixedWeightPostingSource_SWIGUpcast(long jarg1);
  public final static native long ValueCountMatchSpy_SWIGUpcast(long jarg1);
  public final static native long GreatCircleMetric_SWIGUpcast(long jarg1);
  public final static native long LatLongDistancePostingSource_SWIGUpcast(long jarg1);
  public final static native long LatLongDistanceKeyMaker_SWIGUpcast(long jarg1);
  public final static native long WritableDatabase_SWIGUpcast(long jarg1);

  public static String SwigDirector_StemImplementation_apply(StemImplementation jself, String word) {
    return jself.apply(word);
  }
  public static String SwigDirector_StemImplementation_toString(StemImplementation jself) {
    return jself.toString();
  }
  public static boolean SwigDirector_MatchDecider_accept(MatchDecider jself, long doc) {
    return jself.accept(new Document(doc, false));
  }
  public static boolean SwigDirector_ExpandDecider_accept(ExpandDecider jself, String term) {
    return jself.accept(term);
  }
  public static String SwigDirector_KeyMaker_apply(KeyMaker jself, long doc) {
    return jself.apply(new Document(doc, false));
  }
  public static boolean SwigDirector_Stopper_apply(Stopper jself, String term) {
    return jself.apply(term);
  }
  public static String SwigDirector_Stopper_toString(Stopper jself) {
    return jself.toString();
  }
  public static long SwigDirector_RangeProcessor_apply(RangeProcessor jself, String begin, String end) {
    return Query.getCPtr(jself.apply(begin, end));
  }
  public static int SwigDirector_ValueRangeProcessor_apply(ValueRangeProcessor jself, long begin, long end) {
    return jself.apply(new SWIGTYPE_p_std__string(begin, false), new SWIGTYPE_p_std__string(end, false));
  }
  public static long SwigDirector_FieldProcessor_apply(FieldProcessor jself, String str) {
    return Query.getCPtr(jself.apply(str));
  }
  public static void SwigDirector_Compactor_setStatus(Compactor jself, String table, String status) {
    jself.setStatus(table, status);
  }
  public static String SwigDirector_Compactor_resolveDuplicateMetadata(Compactor jself, String key, long num_tags, long tags) {
    return jself.resolveDuplicateMetadata(key, num_tags, (tags == 0) ? null : new SWIGTYPE_p_std__string(tags, false));
  }
  public static long SwigDirector_PostingSource_getTermfreqMin(PostingSource jself) {
    return jself.getTermfreqMin();
  }
  public static long SwigDirector_PostingSource_getTermfreqEst(PostingSource jself) {
    return jself.getTermfreqEst();
  }
  public static long SwigDirector_PostingSource_getTermfreqMax(PostingSource jself) {
    return jself.getTermfreqMax();
  }
  public static double SwigDirector_PostingSource_getWeight(PostingSource jself) {
    return jself.getWeight();
  }
  public static long SwigDirector_PostingSource_getDocId(PostingSource jself) {
    return jself.getDocId();
  }
  public static void SwigDirector_PostingSource_next(PostingSource jself, double min_wt) {
    jself.next(min_wt);
  }
  public static void SwigDirector_PostingSource_skipTo(PostingSource jself, long did, double min_wt) {
    jself.skipTo(did, min_wt);
  }
  public static boolean SwigDirector_PostingSource_check(PostingSource jself, long did, double min_wt) {
    return jself.check(did, min_wt);
  }
  public static boolean SwigDirector_PostingSource_atEnd(PostingSource jself) {
    return jself.atEnd();
  }
  public static String SwigDirector_PostingSource_name(PostingSource jself) {
    return jself.name();
  }
  public static void SwigDirector_PostingSource_init(PostingSource jself, long db) {
    jself.init(new Database(db, false));
  }
  public static String SwigDirector_PostingSource_toString(PostingSource jself) {
    return jself.toString();
  }
  public static long SwigDirector_ValuePostingSource_getTermfreqMin(ValuePostingSource jself) {
    return jself.getTermfreqMin();
  }
  public static long SwigDirector_ValuePostingSource_getTermfreqEst(ValuePostingSource jself) {
    return jself.getTermfreqEst();
  }
  public static long SwigDirector_ValuePostingSource_getTermfreqMax(ValuePostingSource jself) {
    return jself.getTermfreqMax();
  }
  public static double SwigDirector_ValuePostingSource_getWeight(ValuePostingSource jself) {
    return jself.getWeight();
  }
  public static long SwigDirector_ValuePostingSource_getDocId(ValuePostingSource jself) {
    return jself.getDocId();
  }
  public static void SwigDirector_ValuePostingSource_next(ValuePostingSource jself, double min_wt) {
    jself.next(min_wt);
  }
  public static void SwigDirector_ValuePostingSource_skipTo(ValuePostingSource jself, long min_docid, double min_wt) {
    jself.skipTo(min_docid, min_wt);
  }
  public static boolean SwigDirector_ValuePostingSource_check(ValuePostingSource jself, long min_docid, double min_wt) {
    return jself.check(min_docid, min_wt);
  }
  public static boolean SwigDirector_ValuePostingSource_atEnd(ValuePostingSource jself) {
    return jself.atEnd();
  }
  public static String SwigDirector_ValuePostingSource_name(ValuePostingSource jself) {
    return jself.name();
  }
  public static void SwigDirector_ValuePostingSource_init(ValuePostingSource jself, long db_) {
    jself.init(new Database(db_, false));
  }
  public static String SwigDirector_ValuePostingSource_toString(ValuePostingSource jself) {
    return jself.toString();
  }
  public static long SwigDirector_ValueWeightPostingSource_getTermfreqMin(ValueWeightPostingSource jself) {
    return jself.getTermfreqMin();
  }
  public static long SwigDirector_ValueWeightPostingSource_getTermfreqEst(ValueWeightPostingSource jself) {
    return jself.getTermfreqEst();
  }
  public static long SwigDirector_ValueWeightPostingSource_getTermfreqMax(ValueWeightPostingSource jself) {
    return jself.getTermfreqMax();
  }
  public static double SwigDirector_ValueWeightPostingSource_getWeight(ValueWeightPostingSource jself) {
    return jself.getWeight();
  }
  public static long SwigDirector_ValueWeightPostingSource_getDocId(ValueWeightPostingSource jself) {
    return jself.getDocId();
  }
  public static void SwigDirector_ValueWeightPostingSource_next(ValueWeightPostingSource jself, double min_wt) {
    jself.next(min_wt);
  }
  public static void SwigDirector_ValueWeightPostingSource_skipTo(ValueWeightPostingSource jself, long min_docid, double min_wt) {
    jself.skipTo(min_docid, min_wt);
  }
  public static boolean SwigDirector_ValueWeightPostingSource_check(ValueWeightPostingSource jself, long min_docid, double min_wt) {
    return jself.check(min_docid, min_wt);
  }
  public static boolean SwigDirector_ValueWeightPostingSource_atEnd(ValueWeightPostingSource jself) {
    return jself.atEnd();
  }
  public static String SwigDirector_ValueWeightPostingSource_name(ValueWeightPostingSource jself) {
    return jself.name();
  }
  public static void SwigDirector_ValueWeightPostingSource_init(ValueWeightPostingSource jself, long db_) {
    jself.init(new Database(db_, false));
  }
  public static String SwigDirector_ValueWeightPostingSource_toString(ValueWeightPostingSource jself) {
    return jself.toString();
  }
  public static void SwigDirector_MatchSpy_apply(MatchSpy jself, long doc, double wt) {
    jself.apply(new Document(doc, false), wt);
  }
  public static String SwigDirector_MatchSpy_name(MatchSpy jself) {
    return jself.name();
  }
  public static void SwigDirector_MatchSpy_mergeResults(MatchSpy jself, byte[] serialised) {
    jself.mergeResults(serialised);
  }
  public static String SwigDirector_MatchSpy_toString(MatchSpy jself) {
    return jself.toString();
  }
  public static double SwigDirector_LatLongMetric_pointwiseDistance(LatLongMetric jself, long a, long b) {
    return jself.pointwiseDistance(new LatLongCoord(a, false), new LatLongCoord(b, false));
  }
  public static String SwigDirector_LatLongMetric_name(LatLongMetric jself) {
    return jself.name();
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
